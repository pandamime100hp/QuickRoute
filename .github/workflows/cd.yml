name: CD Pipeline

on:
    workflow_run:
        workflows: ["CI Pipeline"]
        branches: [main]
        types: [completed]
    workflow_dispatch: {} # Manual trigger

jobs:
    # build:
    #     name: "Build"
    #     runs-on: ubuntu-latest
    #     steps:
    #         - uses: actions/setup-node@v4
    #           with:
    #               node-version: "lts/*"
    #         - name: Checkout
    #           uses: actions/checkout@v4
    #         - name: Install dependencies
    #           run: npm ci
    #         - name: Build
    #           run: tsc

    approval:
        name: "ðŸš€ Release Approval"
        runs-on: ubuntu-latest
        environment: 
            name: production  # Requires manual approval
            url: https://github.com/pandamime100hp/quickroute
        outputs:
            approved: ${{ steps.approval.outputs.approved }}
        if: |
            (github.event.workflow_run.event == 'workflow_dispatch') || 
            (github.event.workflow_run.conclusion == 'success')

        steps:
            - name: Wait for Approval
              id: approval
              run: |
                echo "Manual approval required for release"
                echo "approved=true" >> $GITHUB_OUTPUT

    semantic-release:
        name: "ðŸš¢ Semantic Release"
        needs: approval  # Waits for approval
        if: needs.approval.outputs.approved == 'true'
        runs-on: ubuntu-latest
        environment: 
            name: production  # Requires manual approval
            url: https://github.com/pandamime100hp/quickroute
        permissions:
            contents: write
            pull-requests: write
            issues: write
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - uses: actions/setup-node@v4
              with:
                  node-version: "lts/*"
            - run: npm ci
            - run: npx semantic-release
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
